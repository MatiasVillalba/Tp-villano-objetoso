import main.*

describe "Test mi villano objetoso" {
	var buenosAires = new Ciudad(20,[])
	var gru = new Villano()
	var pepe = new Minion("pepe",amarillo,500,[])
	var gordito = new Minion("gordito",amarillo,900, [new Arma("rayo congelante",90)])
	var redondito = new Minion("redondito",amarillo,540, [new Arma("rayo congelante",35)])
	var congelar = new Congelar(500)
	var roboDePiramide = new Piramide(90)
	

fixture {
	
	gru.agregarMinion(pepe)
	gru.ciudad(buenosAires)
	
}

method gorditoArmado(){
	gordito.agregarArma(new Arma("rayo Congelante",40))
	gordito.agregarArma(new Arma("rayo Lacer",20))
}

method buenosAiresConObjetos(){
	buenosAires.agregarObjeto("Piramide")
	buenosAires.agregarObjeto("Suero")
	buenosAires.agregarObjeto("Luna")	
}

test "Se crea un minion amarillo con 5 bananas y un rayo congelante con 10 de potencia" {
	
	gru.nuevoMinion("roby")
	assert.that(gru.ejercito().last().nombre() == "roby")

}

test "se le otorga un arma a un minion" {
	
	pepe.agregarArma(new Arma("rayo congelante",20))
	assert.that(pepe.armas().head().nombreArma() == "rayo congelante")
	
}

test "Se alimenta a un minion" {
	
	gru.alimentarA(pepe,2)
	assert.equals(502,pepe.bananas())
}

test "Se verifica si un minion es peligroso" {
	assert.that(pepe.esPeligroso().negate())
}

test "Pepe que es un minion amarillo toma la pocion" {
	pepe.absorberSueroMutante()
	assert.that(pepe.color().nombreColor() == "violeta")
	assert.equals(499,pepe.bananas())
}

test "Gru planifica hacer un congelamiento" {
	pepe.agregarArma(new Arma("rayo congelante",20))
	gru.planificarMaldad(congelar)
	assert.equals(-10,buenosAires.temperatura())
	assert.equals(510,pepe.bananas())
}

test "  la maldad congelar tiene un ejercito de 2 minions"{
	
	assert.equals(2,congelar.minionsSeleccionados([gordito,redondito,pepe]).size())
}

test "Gru planifica robar una piramide"{
	pepe.agregarArma(new Arma("rayo congelante",20))
	pepe.absorberSueroMutante()
	buenosAires.agregarObjeto("Piramide")
	gru.planificarMaldad(roboDePiramide)
	
	assert.equals([],buenosAires.objetosQuePosee())
	assert.equals(509,pepe.bananas())
	
	
}
	
test "Gru planifica robar el Suero mutante"{
	self.buenosAiresConObjetos()
	self.gorditoArmado()
	gru.agregarMinion(gordito)
	gru.agregarMinion(redondito)
	gru.planificarMaldad(sueroMutante)
	
	assert.equals(["Piramide","Luna"],buenosAires.objetosQuePosee())
	assert.equals("violeta",gordito.color().nombreColor())
	
}

test "Gru roba la Luna "{
	self.buenosAiresConObjetos()
	self.gorditoArmado()
	gru.agregarMinion(gordito)
	gru.planificarMaldad(luna)
	
	assert.throwsExceptionWithMessage("No hay minions que pueden hacer la maldad", {luna.aplicarCambios(gru.ejercito(),buenosAires)})

}


}